{"version":3,"file":"main.min.js","sources":["../../node_modules/a11y-dialog/dist/a11y-dialog.esm.js","../../src/js/main.js"],"sourcesContent":["var focusableSelectors = [\n  'a[href]:not([tabindex^=\"-\"])',\n  'area[href]:not([tabindex^=\"-\"])',\n  'input:not([type=\"hidden\"]):not([type=\"radio\"]):not([disabled]):not([tabindex^=\"-\"])',\n  'input[type=\"radio\"]:not([disabled]):not([tabindex^=\"-\"])',\n  'select:not([disabled]):not([tabindex^=\"-\"])',\n  'textarea:not([disabled]):not([tabindex^=\"-\"])',\n  'button:not([disabled]):not([tabindex^=\"-\"])',\n  'iframe:not([tabindex^=\"-\"])',\n  'audio[controls]:not([tabindex^=\"-\"])',\n  'video[controls]:not([tabindex^=\"-\"])',\n  '[contenteditable]:not([tabindex^=\"-\"])',\n  '[tabindex]:not([tabindex^=\"-\"])',\n];\n\nvar TAB_KEY = 9;\nvar ESCAPE_KEY = 27;\n\n/**\n * Define the constructor to instantiate a dialog\n *\n * @constructor\n * @param {Element} element\n */\nfunction A11yDialog(element) {\n  // Prebind the functions that will be bound in addEventListener and\n  // removeEventListener to avoid losing references\n  this._show = this.show.bind(this);\n  this._hide = this.hide.bind(this);\n  this._maintainFocus = this._maintainFocus.bind(this);\n  this._bindKeypress = this._bindKeypress.bind(this);\n\n  this.$el = element;\n  this.shown = false;\n  this._id = this.$el.getAttribute('data-a11y-dialog') || this.$el.id;\n  this._previouslyFocused = null;\n  this._listeners = {};\n\n  // Initialise everything needed for the dialog to work properly\n  this.create();\n}\n\n/**\n * Set up everything necessary for the dialog to be functioning\n *\n * @param {(NodeList | Element | string)} targets\n * @return {this}\n */\nA11yDialog.prototype.create = function () {\n  this.$el.setAttribute('aria-hidden', true);\n  this.$el.setAttribute('aria-modal', true);\n  this.$el.setAttribute('tabindex', -1);\n\n  if (!this.$el.hasAttribute('role')) {\n    this.$el.setAttribute('role', 'dialog');\n  }\n\n  // Keep a collection of dialog openers, each of which will be bound a click\n  // event listener to open the dialog\n  this._openers = $$('[data-a11y-dialog-show=\"' + this._id + '\"]');\n  this._openers.forEach(\n    function (opener) {\n      opener.addEventListener('click', this._show);\n    }.bind(this)\n  );\n\n  // Keep a collection of dialog closers, each of which will be bound a click\n  // event listener to close the dialog\n  this._closers = $$('[data-a11y-dialog-hide]', this.$el).concat(\n    $$('[data-a11y-dialog-hide=\"' + this._id + '\"]')\n  );\n  this._closers.forEach(\n    function (closer) {\n      closer.addEventListener('click', this._hide);\n    }.bind(this)\n  );\n\n  // Execute all callbacks registered for the `create` event\n  this._fire('create');\n\n  return this\n};\n\n/**\n * Show the dialog element, disable all the targets (siblings), trap the\n * current focus within it, listen for some specific key presses and fire all\n * registered callbacks for `show` event\n *\n * @param {Event} event\n * @return {this}\n */\nA11yDialog.prototype.show = function (event) {\n  // If the dialog is already open, abort\n  if (this.shown) {\n    return this\n  }\n\n  // Keep a reference to the currently focused element to be able to restore\n  // it later\n  this._previouslyFocused = document.activeElement;\n  this.$el.removeAttribute('aria-hidden');\n  this.shown = true;\n\n  // Set the focus to the dialog element\n  moveFocusToDialog(this.$el);\n\n  // Bind a focus event listener to the body element to make sure the focus\n  // stays trapped inside the dialog while open, and start listening for some\n  // specific key presses (TAB and ESC)\n  document.body.addEventListener('focus', this._maintainFocus, true);\n  document.addEventListener('keydown', this._bindKeypress);\n\n  // Execute all callbacks registered for the `show` event\n  this._fire('show', event);\n\n  return this\n};\n\n/**\n * Hide the dialog element, enable all the targets (siblings), restore the\n * focus to the previously active element, stop listening for some specific\n * key presses and fire all registered callbacks for `hide` event\n *\n * @param {Event} event\n * @return {this}\n */\nA11yDialog.prototype.hide = function (event) {\n  // If the dialog is already closed, abort\n  if (!this.shown) {\n    return this\n  }\n\n  this.shown = false;\n  this.$el.setAttribute('aria-hidden', 'true');\n\n  // If there was a focused element before the dialog was opened (and it has a\n  // `focus` method), restore the focus back to it\n  // See: https://github.com/KittyGiraudel/a11y-dialog/issues/108\n  if (this._previouslyFocused && this._previouslyFocused.focus) {\n    this._previouslyFocused.focus();\n  }\n\n  // Remove the focus event listener to the body element and stop listening\n  // for specific key presses\n  document.body.removeEventListener('focus', this._maintainFocus, true);\n  document.removeEventListener('keydown', this._bindKeypress);\n\n  // Execute all callbacks registered for the `hide` event\n  this._fire('hide', event);\n\n  return this\n};\n\n/**\n * Destroy the current instance (after making sure the dialog has been hidden)\n * and remove all associated listeners from dialog openers and closers\n *\n * @return {this}\n */\nA11yDialog.prototype.destroy = function () {\n  // Hide the dialog to avoid destroying an open instance\n  this.hide();\n\n  // Remove the click event listener from all dialog openers\n  this._openers.forEach(\n    function (opener) {\n      opener.removeEventListener('click', this._show);\n    }.bind(this)\n  );\n\n  // Remove the click event listener from all dialog closers\n  this._closers.forEach(\n    function (closer) {\n      closer.removeEventListener('click', this._hide);\n    }.bind(this)\n  );\n\n  // Execute all callbacks registered for the `destroy` event\n  this._fire('destroy');\n\n  // Keep an object of listener types mapped to callback functions\n  this._listeners = {};\n\n  return this\n};\n\n/**\n * Register a new callback for the given event type\n *\n * @param {string} type\n * @param {Function} handler\n */\nA11yDialog.prototype.on = function (type, handler) {\n  if (typeof this._listeners[type] === 'undefined') {\n    this._listeners[type] = [];\n  }\n\n  this._listeners[type].push(handler);\n\n  return this\n};\n\n/**\n * Unregister an existing callback for the given event type\n *\n * @param {string} type\n * @param {Function} handler\n */\nA11yDialog.prototype.off = function (type, handler) {\n  var index = (this._listeners[type] || []).indexOf(handler);\n\n  if (index > -1) {\n    this._listeners[type].splice(index, 1);\n  }\n\n  return this\n};\n\n/**\n * Iterate over all registered handlers for given type and call them all with\n * the dialog element as first argument, event as second argument (if any). Also\n * dispatch a custom event on the DOM element itself to make it possible to\n * react to the lifecycle of auto-instantiated dialogs.\n *\n * @access private\n * @param {string} type\n * @param {Event} event\n */\nA11yDialog.prototype._fire = function (type, event) {\n  var listeners = this._listeners[type] || [];\n  var domEvent = new CustomEvent(type, { detail: event });\n\n  this.$el.dispatchEvent(domEvent);\n\n  listeners.forEach(\n    function (listener) {\n      listener(this.$el, event);\n    }.bind(this)\n  );\n};\n\n/**\n * Private event handler used when listening to some specific key presses\n * (namely ESCAPE and TAB)\n *\n * @access private\n * @param {Event} event\n */\nA11yDialog.prototype._bindKeypress = function (event) {\n  // This is an escape hatch in case there are nested dialogs, so the keypresses\n  // are only reacted to for the most recent one\n  if (!this.$el.contains(document.activeElement)) return\n\n  // If the dialog is shown and the ESCAPE key is being pressed, prevent any\n  // further effects from the ESCAPE key and hide the dialog, unless its role\n  // is 'alertdialog', which should be modal\n  if (\n    this.shown &&\n    event.which === ESCAPE_KEY &&\n    this.$el.getAttribute('role') !== 'alertdialog'\n  ) {\n    event.preventDefault();\n    this.hide(event);\n  }\n\n  // If the dialog is shown and the TAB key is being pressed, make sure the\n  // focus stays trapped within the dialog element\n  if (this.shown && event.which === TAB_KEY) {\n    trapTabKey(this.$el, event);\n  }\n};\n\n/**\n * Private event handler used when making sure the focus stays within the\n * currently open dialog\n *\n * @access private\n * @param {Event} event\n */\nA11yDialog.prototype._maintainFocus = function (event) {\n  // If the dialog is shown and the focus is not within a dialog element (either\n  // this one or another one in case of nested dialogs) or within an element\n  // with the `data-a11y-dialog-focus-trap-ignore` attribute, move it back to\n  // its first focusable child.\n  // See: https://github.com/KittyGiraudel/a11y-dialog/issues/177\n  if (\n    this.shown &&\n    !event.target.closest('[aria-modal=\"true\"]') &&\n    !event.target.closest('[data-a11y-dialog-ignore-focus-trap]')\n  ) {\n    moveFocusToDialog(this.$el);\n  }\n};\n\n/**\n * Convert a NodeList into an array\n *\n * @param {NodeList} collection\n * @return {Array<Element>}\n */\nfunction toArray(collection) {\n  return Array.prototype.slice.call(collection)\n}\n\n/**\n * Query the DOM for nodes matching the given selector, scoped to context (or\n * the whole document)\n *\n * @param {String} selector\n * @param {Element} [context = document]\n * @return {Array<Element>}\n */\nfunction $$(selector, context) {\n  return toArray((context || document).querySelectorAll(selector))\n}\n\n/**\n * Set the focus to the first element with `autofocus` with the element or the\n * element itself\n *\n * @param {Element} node\n */\nfunction moveFocusToDialog(node) {\n  var focused = node.querySelector('[autofocus]') || node;\n\n  focused.focus();\n}\n\n/**\n * Get the focusable children of the given element\n *\n * @param {Element} node\n * @return {Array<Element>}\n */\nfunction getFocusableChildren(node) {\n  return $$(focusableSelectors.join(','), node).filter(function (child) {\n    return !!(\n      child.offsetWidth ||\n      child.offsetHeight ||\n      child.getClientRects().length\n    )\n  })\n}\n\n/**\n * Trap the focus inside the given element\n *\n * @param {Element} node\n * @param {Event} event\n */\nfunction trapTabKey(node, event) {\n  var focusableChildren = getFocusableChildren(node);\n  var focusedItemIndex = focusableChildren.indexOf(document.activeElement);\n\n  // If the SHIFT key is being pressed while tabbing (moving backwards) and\n  // the currently focused item is the first one, move the focus to the last\n  // focusable item from the dialog element\n  if (event.shiftKey && focusedItemIndex === 0) {\n    focusableChildren[focusableChildren.length - 1].focus();\n    event.preventDefault();\n    // If the SHIFT key is not being pressed (moving forwards) and the currently\n    // focused item is the last one, move the focus to the first focusable item\n    // from the dialog element\n  } else if (\n    !event.shiftKey &&\n    focusedItemIndex === focusableChildren.length - 1\n  ) {\n    focusableChildren[0].focus();\n    event.preventDefault();\n  }\n}\n\nfunction instantiateDialogs() {\n  $$('[data-a11y-dialog]').forEach(function (node) {\n    new A11yDialog(node);\n  });\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', instantiateDialogs);\n  } else {\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(instantiateDialogs);\n    } else {\n      window.setTimeout(instantiateDialogs, 16);\n    }\n  }\n}\n\nexport { A11yDialog as default };\n","import A11yDialog from 'a11y-dialog';\n\n('use strict');\n\nconsole.log('Does it work');\n\nlet selectAll = (e) => document.querySelectorAll(e);\nlet select = (e) => document.querySelector(e);\n\nselect('.menu-hamburger').addEventListener('click', (e) => {\n  e.stopPropagation();\n  e.preventDefault();\n  select('.nav').classList.add('isOpen');\n});\n\nselect('.nav').addEventListener('click', (e) => {\n  e.stopPropagation();\n  select('.nav').classList.remove('isOpen');\n});\n\nconst container = select('#my-dialog-container');\nconst dialog = new A11yDialog(container);\n"],"names":["focusableSelectors","A11yDialog","element","this","_show","show","bind","_hide","hide","_maintainFocus","_bindKeypress","$el","shown","_id","getAttribute","id","_previouslyFocused","_listeners","create","$$","selector","context","collection","document","querySelectorAll","Array","prototype","slice","call","moveFocusToDialog","node","querySelector","focus","instantiateDialogs","forEach","setAttribute","hasAttribute","_openers","opener","addEventListener","_closers","concat","closer","_fire","event","activeElement","removeAttribute","body","removeEventListener","destroy","on","type","handler","push","off","index","indexOf","splice","listeners","domEvent","CustomEvent","detail","dispatchEvent","listener","contains","which","preventDefault","focusableChildren","join","filter","child","offsetWidth","offsetHeight","getClientRects","length","getFocusableChildren","focusedItemIndex","shiftKey","trapTabKey","target","closest","readyState","window","requestAnimationFrame","setTimeout","console","log","select","e","stopPropagation","classList","add","remove"],"mappings":";yBAAA,IAAIA,EAAqB,CACvB,+BACA,kCACA,sFACA,2DACA,8CACA,gDACA,8CACA,8BACA,uCACA,uCACA,yCACA,mCAYF,SAASC,EAAWC,GAGlBC,KAAKC,MAAQD,KAAKE,KAAKC,KAAKH,MAC5BA,KAAKI,MAAQJ,KAAKK,KAAKF,KAAKH,MAC5BA,KAAKM,eAAiBN,KAAKM,eAAeH,KAAKH,MAC/CA,KAAKO,cAAgBP,KAAKO,cAAcJ,KAAKH,MAE7CA,KAAKQ,IAAMT,EACXC,KAAKS,OAAQ,EACbT,KAAKU,IAAMV,KAAKQ,IAAIG,aAAa,qBAAuBX,KAAKQ,IAAII,GACjEZ,KAAKa,mBAAqB,KAC1Bb,KAAKc,WAAa,GAGlBd,KAAKe,SAiRP,SAASC,EAAGC,EAAUC,GACpB,OAbeC,GAaCD,GAAWE,UAAUC,iBAAiBJ,GAZ/CK,MAAMC,UAAUC,MAAMC,KAAKN,GADpC,IAAiBA,EAsBjB,SAASO,EAAkBC,IACXA,EAAKC,cAAc,gBAAkBD,GAE3CE,QA+CV,SAASC,IACPd,EAAG,sBAAsBe,SAAQ,SAAUJ,GACzC,IAAI7B,EAAW6B,MAtUnB7B,EAAWyB,UAAUR,OAAS,WAgC5B,OA/BAf,KAAKQ,IAAIwB,aAAa,eAAe,GACrChC,KAAKQ,IAAIwB,aAAa,cAAc,GACpChC,KAAKQ,IAAIwB,aAAa,YAAa,GAE9BhC,KAAKQ,IAAIyB,aAAa,SACzBjC,KAAKQ,IAAIwB,aAAa,OAAQ,UAKhChC,KAAKkC,SAAWlB,EAAG,2BAA6BhB,KAAKU,IAAM,MAC3DV,KAAKkC,SAASH,QACZ,SAAUI,GACRA,EAAOC,iBAAiB,QAASpC,KAAKC,QACtCE,KAAKH,OAKTA,KAAKqC,SAAWrB,EAAG,0BAA2BhB,KAAKQ,KAAK8B,OACtDtB,EAAG,2BAA6BhB,KAAKU,IAAM,OAE7CV,KAAKqC,SAASN,QACZ,SAAUQ,GACRA,EAAOH,iBAAiB,QAASpC,KAAKI,QACtCD,KAAKH,OAITA,KAAKwC,MAAM,UAEJxC,MAWTF,EAAWyB,UAAUrB,KAAO,SAAUuC,GAEpC,OAAIzC,KAAKS,QAMTT,KAAKa,mBAAqBO,SAASsB,cACnC1C,KAAKQ,IAAImC,gBAAgB,eACzB3C,KAAKS,OAAQ,EAGbiB,EAAkB1B,KAAKQ,KAKvBY,SAASwB,KAAKR,iBAAiB,QAASpC,KAAKM,gBAAgB,GAC7Dc,SAASgB,iBAAiB,UAAWpC,KAAKO,eAG1CP,KAAKwC,MAAM,OAAQC,IAnBVzC,MAgCXF,EAAWyB,UAAUlB,KAAO,SAAUoC,GAEpC,OAAKzC,KAAKS,OAIVT,KAAKS,OAAQ,EACbT,KAAKQ,IAAIwB,aAAa,cAAe,QAKjChC,KAAKa,oBAAsBb,KAAKa,mBAAmBgB,OACrD7B,KAAKa,mBAAmBgB,QAK1BT,SAASwB,KAAKC,oBAAoB,QAAS7C,KAAKM,gBAAgB,GAChEc,SAASyB,oBAAoB,UAAW7C,KAAKO,eAG7CP,KAAKwC,MAAM,OAAQC,GAEZzC,MArBEA,MA8BXF,EAAWyB,UAAUuB,QAAU,WAwB7B,OAtBA9C,KAAKK,OAGLL,KAAKkC,SAASH,QACZ,SAAUI,GACRA,EAAOU,oBAAoB,QAAS7C,KAAKC,QACzCE,KAAKH,OAITA,KAAKqC,SAASN,QACZ,SAAUQ,GACRA,EAAOM,oBAAoB,QAAS7C,KAAKI,QACzCD,KAAKH,OAITA,KAAKwC,MAAM,WAGXxC,KAAKc,WAAa,GAEXd,MASTF,EAAWyB,UAAUwB,GAAK,SAAUC,EAAMC,GAOxC,YANqC,IAA1BjD,KAAKc,WAAWkC,KACzBhD,KAAKc,WAAWkC,GAAQ,IAG1BhD,KAAKc,WAAWkC,GAAME,KAAKD,GAEpBjD,MASTF,EAAWyB,UAAU4B,IAAM,SAAUH,EAAMC,GACzC,IAAIG,GAASpD,KAAKc,WAAWkC,IAAS,IAAIK,QAAQJ,GAMlD,OAJIG,GAAS,GACXpD,KAAKc,WAAWkC,GAAMM,OAAOF,EAAO,GAG/BpD,MAaTF,EAAWyB,UAAUiB,MAAQ,SAAUQ,EAAMP,GAC3C,IAAIc,EAAYvD,KAAKc,WAAWkC,IAAS,GACrCQ,EAAW,IAAIC,YAAYT,EAAM,CAAEU,OAAQjB,IAE/CzC,KAAKQ,IAAImD,cAAcH,GAEvBD,EAAUxB,QACR,SAAU6B,GACRA,EAAS5D,KAAKQ,IAAKiC,IACnBtC,KAAKH,QAWXF,EAAWyB,UAAUhB,cAAgB,SAAUkC,GAGxCzC,KAAKQ,IAAIqD,SAASzC,SAASsB,iBAM9B1C,KAAKS,OAjPQ,KAkPbgC,EAAMqB,OAC4B,gBAAlC9D,KAAKQ,IAAIG,aAAa,UAEtB8B,EAAMsB,iBACN/D,KAAKK,KAAKoC,IAKRzC,KAAKS,OA5PG,IA4PMgC,EAAMqB,OAmF1B,SAAoBnC,EAAMc,GACxB,IAAIuB,EAjBN,SAA8BrC,GAC5B,OAAOX,EAAGnB,EAAmBoE,KAAK,KAAMtC,GAAMuC,QAAO,SAAUC,GAC7D,SACEA,EAAMC,aACND,EAAME,cACNF,EAAMG,iBAAiBC,WAYHC,CAAqB7C,GACzC8C,EAAmBT,EAAkBX,QAAQjC,SAASsB,eAKtDD,EAAMiC,UAAiC,IAArBD,GACpBT,EAAkBA,EAAkBO,OAAS,GAAG1C,QAChDY,EAAMsB,kBAKLtB,EAAMiC,UACPD,IAAqBT,EAAkBO,OAAS,IAEhDP,EAAkB,GAAGnC,QACrBY,EAAMsB,kBApGNY,CAAW3E,KAAKQ,IAAKiC,KAWzB3C,EAAWyB,UAAUjB,eAAiB,SAAUmC,IAO5CzC,KAAKS,OACJgC,EAAMmC,OAAOC,QAAQ,wBACrBpC,EAAMmC,OAAOC,QAAQ,yCAEtBnD,EAAkB1B,KAAKQ,MAwFH,oBAAbY,WACmB,YAAxBA,SAAS0D,WACX1D,SAASgB,iBAAiB,mBAAoBN,GAE1CiD,OAAOC,sBACTD,OAAOC,sBAAsBlD,GAE7BiD,OAAOE,WAAWnD,EAAoB,KC7X5CoD,QAAQC,IAAI,gBAGZ,IAAIC,EAAS,SAACC,UAAMjE,SAASQ,cAAcyD,IAE3CD,EAAO,mBAAmBhD,iBAAiB,SAAS,SAACiD,GACnDA,EAAEC,kBACFD,EAAEtB,iBACFqB,EAAO,QAAQG,UAAUC,IAAI,aAG/BJ,EAAO,QAAQhD,iBAAiB,SAAS,SAACiD,GACxCA,EAAEC,kBACFF,EAAO,QAAQG,UAAUE,OAAO,aAInB,IAAI3F,EADDsF,EAAO"}